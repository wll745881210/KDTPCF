+--------------------------------------------------------------------+
|             Two-point correlator with k-d tree method              |
|            Author: Lile Wang   Email: lilewang@lbl.gov             |
|                           Jan 17 2013                              |
+--------------------------------------------------------------------+


======================================================================
-1. Copyright and warranty info

KDTPCF: Two-point statistics using k-d tree.
Copyright (C) 2013 Lile Wang; lilewang@lbl.gov

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.


======================================================================
0. Introduction

   This code calculates the two-point statistics for a given catalog
   of galaxies. Basic schemes are based on

   +------------------------+
   |Dolence & Brunner (2007)|
   |http://goo.gl/KCiez     |
   +------------------------+

   with some simplifications as well as extensions. It now can
   calculate spatial (can be azimuthal averaged or 2-D) and angular
   correlation. Using OpenMP, it can be run parallely.


======================================================================
1. Compilation

   This code does not depend on any non-standard C++ library; it uses
   nothing more than the STL.

   Just type in "make" in your terminal if you have:

   (1) GNU make;

   (2) g++;

   and the name of the exectuable file is "test_corr".

   Note: If necessary, you should feel free to modify the Makefile: it
   is written by a human instead of being generated by the computer.


======================================================================
2. Usage

   --------------------------------------------------
   2.0 Input file

   This code requires a catalog and a random (with the same boundary
   as the catalog) to calculate auto pair-countings DD, RR and cross
   pair-counting RR. Those two files should be ascii files without
   header, with the first three columns being right-ascention,
   declination and redshift. The following columns are ignored (please
   do not have more than 128 extra columns).

   --------------------------------------------------
   2.1 Parameter file

   Please refer to "par.txt". The parameter file is case
   sensitive. You may create your own parameter file and modify the
   sequence of items, but please do leave header "CORR_FUNC" and
   "Init" intact.

   ----------------------------------------
   CORR_FUNC

   Init
   s_max                30
   s_min                1
   s_bin                11
   phi_bin              40
   log_bin              1
   file_data            <data_file_name>
   file_rand            <random_file_name>
   lambda               0.7
   z_max                5
   corr_stat            1
   num_threads          8
   ----------------------------------------
   
   Explanations to keys:

   -- s_max, s_min, s_bin and phi_bin:

   This code gives pair-counting results in different distance
   (spatial or angular separation) bins. Those values will specify a
   binning system with constant binning width in linear
   manner. "s_max" and "s_min" for maximum and minimum separatuib
   respectively (in deg for angular separation and Mpc/h for spatial
   separation); "s_bin" gives the number of bins in separation;
   "phi_bin" gives binning number of the angle between the separation
   vector and the line of sight (it can be ignored if you do not
   calculate the 2-D correlation).

   -- log_bin

   If it is greater than 0, the program will use logarithm scale for
   binning. If it is set to 0 or ignored, the code will use linear
   binning. Please do not set s_min <= 0 when using log binning!

   -- file_data and file_rand:
   
   File names, for the catalog and the random file, respectively.

   -- lambda and z_max:

   Cosmological lambda and maximum value of redshift. Can be ignored
   when doing angular correlations.

   -- corr_stat:

   0 for angular correlation; 1 for azimuthal averaged spatial
   correlation; 2 for 2-D spatial correlation.

   -- num_threads

   Number of threads with which the program is parallelized. A number
   that equals to (or slightly greater than) some power of 2 works
   better.  If this key is set to 1, 0 or ignored, the program is run
   serially.

   --------------------------------------------------
   2.2 Run!

   $ ./test_corr <parameter_file>

   --------------------------------------------------
   2.3 Output

   Output files are named as 

   (1) "<data_file_name>_ddbins";

   (2) "<random_file_name>_rrbins";

   (3) "<data_file_name>_<random_file_name>_drbins".

   For 1-D correlation: The first column in each file indicates the
   spatial redshift space separation (in Mpc/h) or angular separation
   (in deg), while the second is the number of pairs.

   For 2-D correlation: First column for redshift space separation,
   second for theta (in deg, indicates the angle between the line of
   sight and the separation vector), and third for pair counting
   results.


======================================================================
3. Expectations--Future development
   
   We will add the following things to the code:

   (1) Jack-knife method for error estimation.

