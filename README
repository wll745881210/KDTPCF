+--------------------------------------------------------------------+
|            Two-point correlation with k-d tree method              |
|            https://github.com/wll745881210/KDTPCF.git              |
|          Author: Lile Wang   Email: lilew@princeton.edu            |
|                           April 6 2013                             |
+--------------------------------------------------------------------+


======================================================================
-1. Copyright and warranty info

KDTPCF: Two-point statistics using k-d tree.
Copyright (C) 2013 Lile Wang; lilewang@lbl.gov

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.


======================================================================
0. Introduction

   This code calculates the two-point statistics for a given catalog
   of galaxies. Basic schemes are based on

   +------------------------+
   |Dolence & Brunner (2007)|
   |http://goo.gl/KCiez     |
   +------------------------+

   with some simplifications as well as extensions. It now can
   calculate spatial (can be azimuthal averaged or 2-D, i.e. along and
   perpandicular to the line of sight) and angular correlation, using
   jackknife method to estimate the errors. With OpenMP equipped, it
   can be run parallely.


======================================================================
1. Compilation

   This code does not depend on any non-standard C++ library; it uses
   nothing more than the STL.

   Just type in "make" in your terminal if you have:

   (1) GNU make;

   (2) g++;

   and the name of the exectuable file is "test_corr".

   Note: If necessary, you should feel free to modify the Makefile: it
   is written by a human instead of being generated by the computer.


======================================================================
2. Usage

   --------------------------------------------------
   2.0 Input file

   This code requires a catalog and a random (with the same boundary
   as the catalog) to calculate auto pair-countings DD, RR and cross
   pair-counting DR. 

   Those two files should be ascii files without header, with the
   first three columns being right-ascention, declination and redshift
   for spatial correlation, or without the redshift column for angular
   correlation. The following columns are ignored (please do not have
   more than 128 extra characters after the useful columns).

   --------------------------------------------------
   2.1 Parameter file

   Please refer to "par.txt". The parameter file is case
   sensitive. You may create your own parameter file and modify the
   sequence of items, but please do leave header "CORR_FUNC" and
   "Init" intact.

   ----------------------------------------
   CORR_FUNC

   Init
   s_max            130
   s_min            1
   s_bin_num        20
   phi_bin_num      40
   log_bin          0
   file_data        <data_file_name>
   file_rand        <random_file_name>
   out_name_base    <out_name_base>
   lambda           0.7
   z_max            5
   corr_stat        1
   jackknife_depth  4
   bin_count_type   1
   num_threads      2
   ----------------------------------------
   
   Explanations to keys:

   -- s_max, s_min, s_bin_num, phi_bin_num:

   This code gives pair-counting results in different distance
   (spatial or angular separation) bins. Those values will specify a
   binning system with constant binning width in linear
   manner. "s_max" and "s_min" for maximum and minimum separatuib
   respectively (in deg for angular separation and Mpc/h for spatial
   separation); "s_bin_num" gives the number of bins in separation;
   "phi_bin_num" gives binning number of the angle between the
   separation vector and the line of sight (this key can be missing if
   you do not calculate the 2-D correlation).

   -- log_bin:

   If it is greater than 0, the program will use logarithm scale for
   binning. If it is set to 0 or this key is missing, the code will
   use linear binning. Please do not set s_min <= 0 when using log
   binning!

   -- file_data, file_rand:
   
   File names, for the catalog and the random file, respectively.

   -- out_name_base:
   
   "Base" for the output file name. If specified, the name of the
   outputs are named as (if they are to be output):

   "<out_name_base>_ddbins"
   "<out_name_base>_rrbins"   
   "<out_name_base>_drbins"
   "<out_name_base>_corr"

   If this entry is missing, the output files are:

   "<data_file_name>_ddbins"
   "<random_file_name>_rrbins"
   "<data_file_name>_<random_file_name>_drbins"
   "<data_file_name>_<random_file_name>_corr"

   -- lambda and z_max:

   Cosmological lambda and maximum value of redshift. Can be missing
   when doing angular correlations.

   -- corr_stat:

   0 or being missing for angular correlation; 1 for azimuthaly
   averaged spatial correlation; 2 for 2-D spatial correlation.

   -- jackknife_depth

   Logarithm of the number of jackknife samples with base 2. Should be
   an integer. If jackknife_depth <= 0 or this key is missing, the
   default value (jackknife_depth = 4) will be automatically adopted.

   -- bin_count_type

   | bin_count_type | What will be calculated |
   |----------------+-------------------------|
   |              0 | dd, dr, rr              |
   |              1 | dd, dr,rr, ls           |
   |              2 | dd                      |
   |              3 | rr                      |
   |              4 | dr                      |
   |              5 | dd, dr                  |
   |              6 | dd, rr                  |
   |              7 | dr, rr                  |

   "dd": auto pair-count of the data catalog;

   "rr": auto pair-count of the random sample;

   "dr": cross pair-count between the data catalog and the random;

   "ls": estimation of correlation function using Landy-Sazlay
   estimator and jackknife method.

   -- num_threads:

   Number of threads with which the program is parallelized. A number
   that equals to (or slightly greater than) some power of 2 works
   better. If this key is set to 1, 0 or the key is missing, the
   program is run serially.

   --------------------------------------------------
   2.2 Run!

   $ ./test_corr <parameter_file>

   --------------------------------------------------
   2.3 Output

   2.3.1 For "_ddbins", "_rrbins" and "_drbins" (pair-counts) files:

   1-D correlation: 

   |   Column | Content                                  |
   |----------+------------------------------------------|
   |        1 | Minimum of s (in Mpc/h) in the bin       |
   |        2 | Central value of s (in Mpc/h) in the bin |
   |        3 | Maximum of s (in Mpc/h) in the bin       |
   |        4 | Pair-counts in the bin                   |
   | The rest | "Jackknife" pair-counts in the bin       |

   s is the redshift space separation.

   2-D correlation: 

   |   Column | Content                                  |
   |----------+------------------------------------------|
   |        1 | Minimum of s (in Mpc/h) in the bin       |
   |        2 | Central value of s (in Mpc/h) in the bin |
   |        3 | Maximum of s (in Mpc/h) in the bin       |
   |        4 | Minimum of phi (in deg) in the bin       |
   |        5 | Central value of phi (in deg) in the bin |
   |        6 | Minimum of phi (in deg) in the bin       |
   |        7 | Pair-counts in the bin                   |
   | The rest | "Jackknife" pair-counts in the bin       |

   phi (in deg) indicates the angle between the line of sight and the
   separation vector.

   2.3.2 For "_corr" files:
   1-D correlation: 

   |   Column | Content                                  |
   |----------+------------------------------------------|
   |        1 | Minimum of s (in Mpc/h) in the bin       |
   |        2 | Central value of s (in Mpc/h) in the bin |
   |        3 | Maximum of s (in Mpc/h) in the bin       |
   |        4 | LS estimate of correlation               |
   |        5 | "Jackknife" error estimate               |

   s is the redshift space separation.

   2-D correlation: 

   |   Column | Content                                  |
   |----------+------------------------------------------|
   |        1 | Minimum of s (in Mpc/h) in the bin       |
   |        2 | Central value of s (in Mpc/h) in the bin |
   |        3 | Maximum of s (in Mpc/h) in the bin       |
   |        4 | Minimum of phi (in deg) in the bin       |
   |        5 | Central value of phi (in deg) in the bin |
   |        6 | Minimum of phi (in deg) in the bin       |
   |        7 | LS estimate of correlation               |
   |        8 | "Jackknife" error estimate               |

======================================================================
3. Expectations--Future development
   
   We will add the following things to the code:

   (1) Better load-balancing for parallelization.

   (2) Porting this code so that it will be adopting GPU for the 
   slowest part.


