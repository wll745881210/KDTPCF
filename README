+--------------------------------------------------------------------+
|             Two-point correlator with k-d tree method              |
|            Author: Lile Wang   Email: lilewang@lbl.gov             |
|                           Jan 6 2013                               |
+--------------------------------------------------------------------+


======================================================================
-1. Copyright and warranty info

KDTPCF: Two-point statistics using k-d tree.
Copyright (C) 2013 Lile Wang; lilewang@lbl.gov

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.


======================================================================
0. Introduction

   This code calculates the two-point statistics for a given catalog
   of galaxies. Basic schemes are based on

   +------------------------+
   |Dolence & Brunner (2008)|
   |http://goo.gl/KCiez     |
   +------------------------+

   with some simplifications as well as extensions. It now can
   calculate the monopole of pair counting results, and it will be
   able to give angular dependent results soon. Using OpenMP, it can
   be run parallely.


======================================================================
1. Installation

   This code does not depend on any non-standard C++ library; it uses
   nothing more than the STL.

   Just type in "make" in your terminal if you have:

   (1) GNU make;

   (2) g++;

   and the name of the exectuable file is "test_corr".

   Note: If necessary, you should feel free to modify the Makefile: it
   is written by a human instead of being generated by the computer.


======================================================================
2. Usage

   --------------------------------------------------
   2.0 Input file

   This code requires a catalog and a random (with the same boundary
   as the catalog) to calculate auto pair-countings DD, RR and cross
   pair-counting RR. Those two files should be ascii files without
   header, with the first three columns being right-ascention,
   declination and redshift. The following columns are ignored (please
   do not have more than 128 extra columns).

   --------------------------------------------------
   2.1 Parameter file

   Please refer to "par.txt". The parameter file is case
   sensitive. You may create your own parameter file and modify the
   sequence of items, but please do leave header "CORR_FUNC" and
   "Init" intact.

   ----------------------------------------
   CORR_FUNC

   Init
   s_max                30
   s_min                1
   s_bin                11
   file_data            <data_file_name>
   file_rand            <random_file_name>
   lambda               0.7
   z_max                5
   num_threads 		8
   ----------------------------------------
   
   Explanations to keys:

   (1) s_max, s_min and s_bin:

   This code gives pair-counting results in different distance
   bins. Those values will specify a binning system with constant
   binning width in linear manner. "s_bin" gives the number of bins.

   (2) file_data and file_rand:
   
   Self-evident.

   (3) lambda:

   Cosmological lambda.

   (4) z_max:
   
   Maximum value of redshift.

   (5) num_threads

   Number of threads with which the program is parallelized. A number
   that equals to (or slightly greater than) some power of 2 works better.
   If this key equals to 1 or is missing, the program is run parallely.

   --------------------------------------------------
   2.2 Run!

   $ ./test_corr <parameter_file>

   --------------------------------------------------
   2.3 Output

   Output files are named as 

   (1) "<data_file_name>_ddbins";

   (2) "<random_file_name>_rrbins";

   (3) "<data_file_name>_<random_file_name>_drbins".

   The first column in each file indicates the centers of distance
   bins, while the second is the number of pairs.


======================================================================
3. Expectations--Future development
   
   We will add the following things to the code:

   (1) Calculation of two-point statistics in two dimensions: parallel and perpan;

   (2) Better load balancing in parallelization;

   (3) Speeding up the code with specific manners;

   (4) Jack-knife method for error estimation.

